service: houseService

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: eu-west-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    REGION: ${self:provider.region}

functions:
  firstHouse:
    handler: handler.firstHouse

    events:
          - http:
              path: hello-firstHouse
              method: get
#              integration: lambda-proxy

  secondHouse:
    handler: handler.secondHouse

    events:
            - http:
                path: hello-secondHouse
                method: get
#                integration: lambda-proxy


#resources:
#  Resources:
#  DynamoDbTable:
#    Type: AWS::DynamoDB::Table
#    Properties:
#      TableName: ${self:provider.environment.DYNAMODB_TABLE}
#      AttributeDefinitions:
#        - AttributeName: house_key
#          AttributeType: S
#      KeySchema:
#        - AttributeName: house_key
#          KeyType: HASH
#      ProvisionedThroughput:
#        ReadCapacityUnits: 5
#        WriteCapacityUnits: 5
#  DynamoDBIamPolicy:
#    Type: AWS::IAM::Policy
#    DependsOn: DynamoDbTable
#    Properties:
#      PolicyName: lambda-dynamodb
#      PolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Allow
#            Action:
#              - dynamodb:*
#            Resource: arn:aws:dynamodb:*:*:table/${self:provider.environment.DYNAMODB_TABLE}
#
#      Roles:
#        - Ref: IamRoleLambdaExecution # Refererar till IAM-rollen som Serverless Framework automatiskt konfigurerar vid deploy
